name: "Build Android App"

on:
  push:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21"

      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  build-android:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21"

      - uses: actions/checkout@v3

      # - name: Restore Node modules cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-
      
      - name: Install Node modules
        run: npm install

      # - name: Restore Gradle cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.gradle/caches
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name: Build Android Release
        run: |
          cd android && ./gradlew :app:assembleDebug -PreactNativeArchitectures=x86

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/
    
  release:
      runs-on: ubuntu-latest
      needs: build-android
      
      steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get previous tag
        id: prev_tag
        run: echo "::set-output name=prev_tag::$(git describe --tags --abbrev=0 HEAD^)"

      - name: Generate release notes
        id: release_notes
        run: |
          echo "Release Notes: "
          echo "::set-output name=notes::$(git log --pretty=format:'%h - %s' $(echo ${{ steps.prev_tag.outputs.prev_tag }})..HEAD)"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          body: ${{ steps.release_notes.outputs.notes }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: path-to-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
