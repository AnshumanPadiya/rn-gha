name: "Build Android App"

on:
  push:
    branches:
      - test

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21"

      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  build-android:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21"

      - uses: actions/checkout@v3

      # - name: Restore Node modules cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Install Node modules
        run: npm install

      # - name: Restore Gradle cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.gradle/caches
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name: Build Android Release
        run: |
          cd android && ./gradlew :app:assembleDebug -PreactNativeArchitectures=x86

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/

      - name: Install Conventional Changelog
        run: npm install -g conventional-changelog-cli

      - name: Generate Changelog
        run: conventional-changelog -p angular -i CHANGELOG.md -s

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: false

      - name: Check current directory
        run: |
          ls -alh

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive

  # release:
  #     runs-on: ubuntu-latest
  #     needs: build-android

  #     steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16'

  #     - name: Install Conventional Changelog
  #       run: npm install -g conventional-changelog-cli

  #     - name: Generate Changelog
  #       run: conventional-changelog -p angular -i CHANGELOG.md -s

  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: v${{ github.run_number }}
  #         release_name: Release ${{ github.run_number }}
  #         body_path: ./CHANGELOG.md
  #         draft: false
  #         prerelease: false

  #     - name: Upload APK to Release
  #       uses: actions/upload-release-asset@v1
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: android/app/build/outputs/apk/app-release.apk
  #         asset_name: app-release.apk
  #         asset_content_type: application/vnd.android.package-archive
